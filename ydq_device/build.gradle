apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'


import com.android.build.OutputFile
android {
    compileSdkVersion 28


    defaultConfig {
        applicationId "com.conagra"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        dataBinding {
            enabled = true
        }
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        multiDexEnabled true
        javaCompileOptions{
            annotationProcessorOptions.includeCompileClasspath = true
        }
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
    }
    sourceSets {
        main {
            assets.srcDirs = ['assets', 'src/main/assets', 'src/main/assets/']
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }
    lintOptions {
        disable "ResourceType"
        abortOnError false
        checkReleaseBuilds false

    }
    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "4g"
    }
    splits {
//        abi {
//            reset()
//            enable false
//            universalApk false  // If true, also generate a universal APK
//            include "armeabi-v7a", "x86"
//        }
        abi {
            enable false
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }

    signingConfigs {
        release {
            storeFile file(rootProject.ext.myAppReleaseStoreFile)
            storePassword rootProject.ext.myAppReleaseStorePassword
            keyAlias rootProject.ext.myAppReleaseKeyAlias
            keyPassword rootProject.ext.myAppReleaseKeyPassword
        }
        debug {
            storeFile file(rootProject.ext.myAppReleaseStoreFile)
            storePassword rootProject.ext.myAppReleaseStorePassword
            keyAlias  rootProject.ext.myAppReleaseKeyAlias
            keyPassword  rootProject.ext.myAppReleaseKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField("String", "CODEPUSH_KEY", "\"" + rootProject.ext.code_push_key_production+"\"" )
        }
        debug {
            multiDexEnabled true
            signingConfig signingConfigs.debug
            buildConfigField("String", "CODEPUSH_KEY", "\"" +rootProject.ext.code_push_key_production +  "\"" )
        }
    }


    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
        pickFirst 'AndroidManifest.xml'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
//        exclude '/lib/arm64-v8a/**'
//        exclude '/lib/armeabi/**'
//        exclude '/lib/armeabi-v7a/**'
//        exclude '/lib/x86/**'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


    implementation project(':MyUtils')
    implementation project(':blelibrary')
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportAppLibVersion}"
    compile 'com.orhanobut:logger:1.15'
    compile 'com.huawei.android.hms:push:2.5.3.305'
    compile 'com.github.jokermonn:permissions4m:2.0.0-lib'
    annotationProcessor 'com.github.jokermonn:permissions4m:2.0.0-processor'
    // From node_modules
    def presentationDependencies = rootProject.ext.presentationDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    def uiDependencies = rootProject.ext.uiDependencies
    compile uiDependencies.flexbox
    compile uiDependencies.cardview
    compile uiDependencies.snackBar
    compile uiDependencies.rebound
    //    compile uiDependencies.emoji
    compile uiDependencies.materialDialogs
    compile uiDependencies.pickerview
    compile uiDependencies.activityTransition
    compile uiDependencies.materialDesignLibrary
    compile uiDependencies.downloadProgressBar
    compile uiDependencies.swipeRecyclerview
    compile uiDependencies.recyclerviewAnimators
    compile(uiDependencies.circularreveal) {
        transitive = true;
    }
    compile uiDependencies.topsnackbar
    //presenter
    annotationProcessor presentationDependencies.daggerCompiler
    compile presentationDependencies.dagger
    compile presentationDependencies.annotations
    compile presentationDependencies.rxJava
    compile presentationDependencies.pgyersdk
    compile presentationDependencies.rxAndroid
    compile presentationDependencies.design
    compile presentationDependencies.glide
    compile presentationDependencies.glideTransformations
    compile presentationDependencies.retrofit
    compile presentationDependencies.retrofit2Gson
    compile presentationDependencies.retrofit2Adapter
    compile presentationDependencies.multidex
    //    compile presentationDependencies.gson
    compile presentationDependencies.rxbinding
    //    compile presentationDependencies.pinyin4j
    compile presentationDependencies.okhttpLoggingInterceptor
    //    compile presentationDependencies.zxing
    //    provided presentationDependencies.javaxAnnotation
    compile(presentationDependencies.supportV4) {
        force = true;
    }
    compile(presentationDependencies.appcompatV7) {
        force = true;
    }
    //    compile presentationDependencies.reactNative
    //data
    annotationProcessor dataDependencies.processor
    compile dataDependencies.dataBase
    compile dataDependencies.dataBaseCore
    compile dataDependencies.gtm
    //PermissionsDispatcher has to be above AndroidAnnotations
    compile(presentationDependencies.permission) {
        exclude module: "support-v13"
    }
    provided presentationDependencies.permissionProcessor
    compile 'org.aspectj:aspectjrt:1.8.8'
    //compile files('libs/json_simple-1.1.jar')
    compile presentationDependencies.baseRecyclerViewAdapter
}
